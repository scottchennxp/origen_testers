hp93000,testflow,0.1
language_revision = 1;
 
information
 
-- STOPDIFF
test_revision = "0.5.6";
-- STARTDIFF
 
end
--------------------------------------------------
declarations

@JOB = -1;
@DO_ERASE = -1;
@NO_EXTRA_ERASE = -1;
@ADDITIONAL_ERASE = -1;
@ERASE_VFY_0_5B6E9EA_FAILED = -1;
@ERASE_VFY_1_5B6E9EA_FAILED = -1;
@ERASE_VFY_2_5B6E9EA_FAILED = -1;
@ERASE_VFY_3_5B6E9EA_FAILED = -1;
@ERASE_VFY_4_5B6E9EA_FAILED = -1;
@ERASE_PASSED_1_5B6E9EA_PASSED = -1;
@ERASE_PASSED_2_5B6E9EA_PASSED = -1;
@ERASE_PASSED_3_5B6E9EA_FAILED = -1;
@ERASE_PASSED_4_5B6E9EA_FAILED = -1;
@ERASE_FAILED_1_5B6E9EA_FAILED = -1;
@ERASE_FAILED_2_5B6E9EA_FAILED = -1;
@ERASE_FAILED_3_5B6E9EA_PASSED = -1;
@ERASE_FAILED_4_5B6E9EA_PASSED = -1;
@ERASE_RAN_1_5B6E9EA_RAN = -1;
@ERASE_RAN_2_5B6E9EA_RAN = -1;
@ERASE_RAN_3_5B6E9EA_RAN = -1;
@ERASE_RAN_4_5B6E9EA_RAN = -1;
end
--------------------------------------------------
implicit_declarations

end
-----------------------------------------------------------------
flags

datalog_formatter = 0;
datalog_sample_size = 1;
graphic_result_displa = 1;
state_display = 0;
print_wafermap = 0;
ink_wafer = 0;
max_reprobes = 1;
temp_monitor = 1;
calib_age_monitor = 1;
diag_monitor = 1;
current_monitor = 1;
log_events_enable = 1;
set_pass_level = 0;
set_fail_level = 0;
set_bypass_level = 0;
hold_on_fail = 0;
global_hold = 0;
debug_mode = 0;
debug_analog = 0;
parallel_mode = 1;
site_match_mode = 2;
global_overon = 0;
limits_enable = 0;
test_number_enable = 1;
test_number_inc = 1;
log_cycles_before = 0;
log_cycles_after = 0;
unburst_mode = 0;
sqst_mode = 0;
warn_as_fail = 1;
use_hw_dsp = 0;
dsp_file_enable = 0;
buffer_testflow_log = 0;
check_testmethod_api = 0;
stdf_generation = 1;
tm_crash_as_fatal = 1;
hidden_datalog_mode = 0;
multibin_mode = 0;
end
-----------------------------------------------------------------
testmethodparameters
tm_1:
  "testName" = "Functional";
  "output" = "None";
tm_2:
  "testName" = "Functional";
  "output" = "None";
tm_3:
  "testName" = "Functional";
  "output" = "None";
tm_4:
  "testName" = "Functional";
  "output" = "None";
tm_5:
  "testName" = "Functional";
  "output" = "None";
tm_6:
  "testName" = "Functional";
  "output" = "None";
tm_7:
  "testName" = "Functional";
  "output" = "None";
tm_8:
  "testName" = "Functional";
  "output" = "None";
tm_9:
  "testName" = "Functional";
  "output" = "None";
tm_10:
  "testName" = "Functional";
  "output" = "None";
tm_11:
  "testName" = "Functional";
  "output" = "None";
tm_12:
  "testName" = "Functional";
  "output" = "None";
tm_13:
  "testName" = "Functional";
  "output" = "None";
tm_14:
  "testName" = "Functional";
  "output" = "None";
tm_15:
  "testName" = "Functional";
  "output" = "None";
tm_16:
  "testName" = "Functional";
  "output" = "None";
tm_17:
  "testName" = "Functional";
  "output" = "None";
tm_18:
  "testName" = "Functional";
  "output" = "None";
tm_19:
  "testName" = "Functional";
  "output" = "None";
tm_20:
  "testName" = "Functional";
  "output" = "None";
tm_21:
  "testName" = "Functional";
  "output" = "None";
tm_22:
  "testName" = "Functional";
  "output" = "None";
tm_23:
  "testName" = "Functional";
  "output" = "None";
tm_24:
  "testName" = "Functional";
  "output" = "None";
tm_25:
  "testName" = "Functional";
  "output" = "None";
tm_26:
  "testName" = "Functional";
  "output" = "None";
tm_27:
  "testName" = "Functional";
  "output" = "None";
tm_28:
  "testName" = "Functional";
  "output" = "None";
tm_29:
  "testName" = "Functional";
  "output" = "None";
tm_30:
  "testName" = "Functional";
  "output" = "None";
tm_31:
  "testName" = "Functional";
  "output" = "None";
tm_32:
  "testName" = "Functional";
  "output" = "None";
tm_33:
  "testName" = "Functional";
  "output" = "None";
tm_34:
  "testName" = "Functional";
  "output" = "None";
tm_35:
  "testName" = "Functional";
  "output" = "None";
tm_36:
  "testName" = "Functional";
  "output" = "None";
tm_37:
  "testName" = "Functional";
  "output" = "None";
tm_38:
  "testName" = "Functional";
  "output" = "None";
tm_39:
  "testName" = "Functional";
  "output" = "None";
tm_40:
  "testName" = "Functional";
  "output" = "None";
tm_41:
  "testName" = "Functional";
  "output" = "None";
tm_42:
  "testName" = "Functional";
  "output" = "None";
tm_43:
  "testName" = "Functional";
  "output" = "None";
tm_44:
  "testName" = "Functional";
  "output" = "None";
tm_45:
  "testName" = "Functional";
  "output" = "None";
tm_46:
  "testName" = "Functional";
  "output" = "None";
tm_47:
  "testName" = "Functional";
  "output" = "None";
tm_48:
  "testName" = "Functional";
  "output" = "None";
tm_49:
  "testName" = "Functional";
  "output" = "None";
tm_50:
  "testName" = "Functional";
  "output" = "None";
tm_51:
  "testName" = "Functional";
  "output" = "None";
tm_52:
  "testName" = "Functional";
  "output" = "None";
tm_53:
  "testName" = "Functional";
  "output" = "None";
tm_54:
  "testName" = "Functional";
  "output" = "None";
tm_55:
  "testName" = "Functional";
  "output" = "None";
tm_56:
  "testName" = "Functional";
  "output" = "None";
tm_57:
  "testName" = "Functional";
  "output" = "None";
tm_58:
  "testName" = "Functional";
  "output" = "None";
tm_59:
  "testName" = "Functional";
  "output" = "None";
tm_60:
  "testName" = "Functional";
  "output" = "None";
tm_61:
  "testName" = "Functional";
  "output" = "None";
tm_62:
  "testName" = "Functional";
  "output" = "None";
tm_63:
  "testName" = "Functional";
  "output" = "None";
tm_64:
  "testName" = "Functional";
  "output" = "None";
tm_65:
  "testName" = "Functional";
  "output" = "None";
tm_66:
  "testName" = "Functional";
  "output" = "None";
tm_67:
  "testName" = "Functional";
  "output" = "None";
tm_68:
  "testName" = "Functional";
  "output" = "None";
tm_69:
  "testName" = "Functional";
  "output" = "None";
tm_70:
  "testName" = "Functional";
  "output" = "None";
tm_71:
  "testName" = "Functional";
  "output" = "None";
tm_72:
  "testName" = "Functional";
  "output" = "None";
tm_73:
  "testName" = "Functional";
  "output" = "None";
tm_74:
  "testName" = "Functional";
  "output" = "None";
tm_75:
  "testName" = "Functional";
  "output" = "None";
tm_76:
  "testName" = "Functional";
  "output" = "None";
tm_77:
  "testName" = "Functional";
  "output" = "None";
tm_78:
  "testName" = "Functional";
  "output" = "None";
tm_79:
  "testName" = "Functional";
  "output" = "None";
tm_80:
  "testName" = "Functional";
  "output" = "None";
tm_81:
  "testName" = "Functional";
  "output" = "None";
tm_82:
  "testName" = "Functional";
  "output" = "None";
tm_83:
  "testName" = "Functional";
  "output" = "None";
tm_84:
  "testName" = "Functional";
  "output" = "None";
tm_85:
  "testName" = "Functional";
  "output" = "None";
tm_86:
  "testName" = "Functional";
  "output" = "None";
tm_87:
  "testName" = "Functional";
  "output" = "None";
tm_88:
  "testName" = "Functional";
  "output" = "None";
tm_89:
  "testName" = "Functional";
  "output" = "None";
tm_90:
  "testName" = "Functional";
  "output" = "None";
tm_91:
  "testName" = "Functional";
  "output" = "None";
tm_92:
  "testName" = "Functional";
  "output" = "None";
tm_93:
  "testName" = "Functional";
  "output" = "None";
tm_94:
  "testName" = "Functional";
  "output" = "None";
tm_95:
  "testName" = "Functional";
  "output" = "None";
tm_96:
  "testName" = "Functional";
  "output" = "None";
end
--------------------------------------------------
testmethodlimits
tm_1:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_2:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_3:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_4:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_5:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_6:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_7:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_8:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_9:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_10:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_11:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_12:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_13:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_14:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_15:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_16:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_17:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_18:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_19:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_20:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_21:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_22:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_23:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_24:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_25:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_26:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_27:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_28:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_29:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_30:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_31:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_32:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_33:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_34:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_35:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_36:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_37:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_38:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_39:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_40:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_41:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_42:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_43:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_44:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_45:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_46:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_47:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_48:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_49:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_50:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_51:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_52:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_53:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_54:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_55:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_56:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_57:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_58:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_59:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_60:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_61:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_62:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_63:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_64:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_65:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_66:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_67:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_68:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_69:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_70:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_71:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_72:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_73:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_74:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_75:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_76:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_77:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_78:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_79:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_80:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_81:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_82:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_83:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_84:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_85:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_86:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_87:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_88:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_89:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_90:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_91:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_92:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_93:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_94:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_95:
  "Functional" = "":"NA":"":"NA":"":"":"";
tm_96:
  "Functional" = "":"NA":"":"NA":"":"":"";
end
--------------------------------------------------
testmethods
tm_1:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_2:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_3:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_4:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_5:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_6:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_7:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_8:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_9:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_10:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_11:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_12:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_13:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_14:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_15:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_16:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_17:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_18:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_19:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_20:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_21:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_22:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_23:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_24:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_25:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_26:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_27:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_28:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_29:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_30:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_31:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_32:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_33:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_34:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_35:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_36:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_37:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_38:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_39:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_40:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_41:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_42:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_43:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_44:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_45:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_46:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_47:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_48:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_49:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_50:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_51:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_52:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_53:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_54:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_55:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_56:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_57:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_58:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_59:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_60:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_61:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_62:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_63:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_64:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_65:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_66:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_67:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_68:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_69:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_70:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_71:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_72:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_73:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_74:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_75:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_76:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_77:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_78:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_79:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_80:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_81:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_82:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_83:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_84:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_85:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_86:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_87:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_88:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_89:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_90:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_91:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_92:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_93:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_94:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_95:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
tm_96:
  testmethod_class = "ac_tml.AcTest.FunctionalTest";
end
--------------------------------------------------
test_suites
program_ckbd:
  override = 1;
 override_seqlbl = "program_ckbd";
 override_testf = tm_1;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_ckbd:
  override = 1;
 override_seqlbl = "margin_read1_ckbd";
 override_testf = tm_2;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read0_ckbd:
  override = 1;
 override_seqlbl = "margin_read0_ckbd";
 override_testf = tm_3;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_4;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_1:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_5;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_2:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_6;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_3:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_7;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_4:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_8;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_5:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_9;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_10;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd:
  override = 1;
 override_seqlbl = "program_ckbd";
 override_testf = tm_11;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_1:
  override = 1;
 override_seqlbl = "program_ckbd";
 override_testf = tm_12;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_2:
  override = 1;
 override_seqlbl = "program_ckbd";
 override_testf = tm_13;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_3:
  override = 1;
 override_seqlbl = "program_ckbd";
 override_testf = tm_14;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_4:
  override = 1;
 override_seqlbl = "program_ckbd_b0";
 override_testf = tm_15;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_5:
  override = 1;
 override_seqlbl = "program_ckbd_b1";
 override_testf = tm_16;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_6:
  override = 1;
 override_seqlbl = "program_ckbd_b2";
 override_testf = tm_17;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_7:
  override = 1;
 override_seqlbl = "program_ckbd_b0";
 override_testf = tm_18;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_8:
  override = 1;
 override_seqlbl = "program_ckbd_b1";
 override_testf = tm_19;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_9:
  override = 1;
 override_seqlbl = "program_ckbd_b2";
 override_testf = tm_20;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_10:
  override = 1;
 override_seqlbl = "program_ckbd_b0";
 override_testf = tm_21;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_11:
  override = 1;
 override_seqlbl = "program_ckbd_b1";
 override_testf = tm_22;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_12:
  override = 1;
 override_seqlbl = "program_ckbd_b2";
 override_testf = tm_23;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_13:
  override = 1;
 override_seqlbl = "program_ckbd_b0";
 override_testf = tm_24;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_14:
  override = 1;
 override_seqlbl = "program_ckbd_b1";
 override_testf = tm_25;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_15:
  override = 1;
 override_seqlbl = "program_ckbd_b2";
 override_testf = tm_26;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
p1_only_test:
  override = 1;
 override_seqlbl = "p1_only_test";
 override_testf = tm_27;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
p1_or_p2_only_test:
  override = 1;
 override_seqlbl = "p1_or_p2_only_test";
 override_testf = tm_28;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
not_p1_test:
  override = 1;
 override_seqlbl = "not_p1_test";
 override_testf = tm_29;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
not_p1_or_p2_test:
  override = 1;
 override_seqlbl = "not_p1_or_p2_test";
 override_testf = tm_30;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
another_not_p1_or_p2_test:
  override = 1;
 override_seqlbl = "another_not_p1_or_p2_test";
 override_testf = tm_31;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
por_ins:
  override = 1;
 override_seqlbl = "por_ins";
 override_testf = tm_32;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_6:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_33;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_7:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_34;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_8:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_35;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_9:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_36;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_10:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_37;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_1:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_38;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_11:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_39;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_2:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_40;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_12:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_41;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_3:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_42;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_13:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_43;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_4:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_44;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_14:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_45;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_5:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_46;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_15:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_47;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_6:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_48;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_16:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_49;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_17:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_50;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_18:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_51;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_19:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_52;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_20:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_53;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_21:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_54;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_22:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_55;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_23:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_56;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_24:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_57;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_7:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_58;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_8:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_59;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_25:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_60;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_26:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_61;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_9:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_62;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_10:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_63;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_27:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_64;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_28:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_65;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_11:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_66;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_12:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_67;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_29:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_68;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_30:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_69;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_13:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_70;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_14:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_71;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_31:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_72;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_32:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_73;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_15:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_74;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_16:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_75;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_33:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_76;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_34:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_77;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_17:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_78;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_18:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_79;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_35:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_80;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_36:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_81;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_37:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_82;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_38:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_83;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_19:
  override = 1;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_84;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_39:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_85;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_40:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_86;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_all1_20:
  override = 1;
 override_levset = cz;
 override_seqlbl = "margin_read1_all1";
 override_testf = tm_87;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
program_ckbd_16:
  override = 1;
 override_seqlbl = "program_ckbd";
 override_testf = tm_88;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
bitmap_all0:
  override = 1;
 override_seqlbl = "bitmap_all0";
 override_testf = tm_89;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
bitcell_iv_0:
  override = 1;
 override_seqlbl = "bitcell_iv_0";
 override_testf = tm_90;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
bitcell_iv_1:
  override = 1;
 override_seqlbl = "bitcell_iv_1";
 override_testf = tm_91;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
bitcell_iv_2:
  override = 1;
 override_seqlbl = "bitcell_iv_2";
 override_testf = tm_92;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read1_ckbd:
  override = 1;
 override_seqlbl = "margin_read1_ckbd";
 override_testf = tm_93;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
normal_read_ckbd:
  override = 1;
 override_seqlbl = "normal_read_ckbd";
 override_testf = tm_94;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
margin_read0_ckbd:
  override = 1;
 override_seqlbl = "margin_read0_ckbd";
 override_testf = tm_95;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
erase_all_41:
  override = 1;
 override_seqlbl = "erase_all";
 override_testf = tm_96;
local_flags  = output_on_pass, output_on_fail, value_on_pass, value_on_fail, per_pin_on_pass, per_pin_on_fail;
 site_match = 2;
 site_control = "parallel:";
end
--------------------------------------------------
test_flow
{
    @ERASE_VFY_0_5B6E9EA_FAILED = -1;
    @ERASE_VFY_1_5B6E9EA_FAILED = -1;
    @ERASE_VFY_2_5B6E9EA_FAILED = -1;
    @ERASE_VFY_3_5B6E9EA_FAILED = -1;
    @ERASE_VFY_4_5B6E9EA_FAILED = -1;
    @ERASE_PASSED_1_5B6E9EA_PASSED = -1;
    @ERASE_PASSED_2_5B6E9EA_PASSED = -1;
    @ERASE_PASSED_3_5B6E9EA_FAILED = -1;
    @ERASE_PASSED_4_5B6E9EA_FAILED = -1;
    @ERASE_FAILED_1_5B6E9EA_FAILED = -1;
    @ERASE_FAILED_2_5B6E9EA_FAILED = -1;
    @ERASE_FAILED_3_5B6E9EA_PASSED = -1;
    @ERASE_FAILED_4_5B6E9EA_PASSED = -1;
    @ERASE_RAN_1_5B6E9EA_RAN = -1;
    @ERASE_RAN_2_5B6E9EA_RAN = -1;
    @ERASE_RAN_3_5B6E9EA_RAN = -1;
    @ERASE_RAN_4_5B6E9EA_RAN = -1;
}, open,"Init Flow Control Vars", ""
run_and_branch(program_ckbd)
then
{
}
else
{
  stop_bin "1100", "fail", , bad, noreprobe, red, 100, over_on;
}
run(margin_read1_ckbd);
run(margin_read0_ckbd);
{
  run(erase_all);
  run(erase_all_1);
  run(erase_all_2);
  run(erase_all_3);
  run(erase_all_4);
  run(erase_all_5);
  {
    run(margin_read1_all1);
  }, open,"erase_vfy", ""
}, open,"erase", ""
print_dl("Should be v1");
run(program_ckbd);
print_dl("Should be v2");
run(program_ckbd_1);
print_dl("Should be v1");
run(program_ckbd_2);
print_dl("Should be v2");
run(program_ckbd_3);
print_dl("Should be a v1 test instance group");
{
  run(program_ckbd_4);
  run(program_ckbd_5);
  run(program_ckbd_6);
}, open,"program_ckbd", ""
print_dl("Should be a v2 test instance group");
{
  run(program_ckbd_7);
  run(program_ckbd_8);
  run(program_ckbd_9);
}, open,"program_ckbd_2", ""
print_dl("Should be a v1 test instance group");
{
  run(program_ckbd_10);
  run(program_ckbd_11);
  run(program_ckbd_12);
}, open,"program_ckbd_3", ""
print_dl("Should be a v2 test instance group");
{
  run(program_ckbd_13);
  run(program_ckbd_14);
  run(program_ckbd_15);
}, open,"program_ckbd_4", ""
if @JOB == "P1" then
{
  run(p1_only_test);
}
else
{
}
if @JOB == "P1" or @JOB == "P2" then
{
  run(p1_or_p2_only_test);
}
else
{
}
if @JOB == "P1" then
{
}
else
{
  run(not_p1_test);
}
if @JOB == "P1" or @JOB == "P2" then
{
}
else
{
  run(not_p1_or_p2_test);
  run(another_not_p1_or_p2_test);
}
print_dl("Verify that a test with an external instance works");
run(por_ins);
print_dl("Verify that a request to use the current context works");
if @JOB == "P1" then
{
  run(erase_all_6);
  run(erase_all_7);
  run(erase_all_8);
}
else
{
}
if @JOB == "P2" then
{
}
else
{
  run(erase_all_9);
}
run(erase_all_10);
run_and_branch(margin_read1_all1_1)
then
{
}
else
{
  @ERASE_VFY_0_5B6E9EA_FAILED = 1;
}
if @ERASE_VFY_0_5B6E9EA_FAILED == 1 then
{
  run(erase_all_11);
}
else
{
}
run_and_branch(margin_read1_all1_2)
then
{
}
else
{
  @ERASE_VFY_1_5B6E9EA_FAILED = 1;
}
if @ERASE_VFY_1_5B6E9EA_FAILED == 1 then
{
  run(erase_all_12);
}
else
{
}
run_and_branch(margin_read1_all1_3)
then
{
}
else
{
  @ERASE_VFY_2_5B6E9EA_FAILED = 1;
}
if @ERASE_VFY_2_5B6E9EA_FAILED == 1 then
{
  run(erase_all_13);
}
else
{
}
run_and_branch(margin_read1_all1_4)
then
{
}
else
{
  @ERASE_VFY_3_5B6E9EA_FAILED = 1;
}
if @ERASE_VFY_3_5B6E9EA_FAILED == 1 then
{
  run(erase_all_14);
}
else
{
}
run_and_branch(margin_read1_all1_5)
then
{
}
else
{
  @ERASE_VFY_4_5B6E9EA_FAILED = 1;
}
if @ERASE_VFY_4_5B6E9EA_FAILED == 1 then
{
  run(erase_all_15);
}
else
{
}
run(margin_read1_all1_6);
print_dl("Test if enable");
if @DO_ERASE == 1 then
{
  run(erase_all_16);
  run(erase_all_17);
}
else
{
}
print_dl("Test unless enable");
if @NO_EXTRA_ERASE == 1 then
{
}
else
{
  run(erase_all_18);
  run(erase_all_19);
  run(erase_all_20);
}
run(erase_all_21);
run(erase_all_22);
print_dl("Test if_passed");
run_and_branch(erase_all_23)
then
{
  @ERASE_PASSED_1_5B6E9EA_PASSED = 1;
}
else
{
}
run_and_branch(erase_all_24)
then
{
  @ERASE_PASSED_2_5B6E9EA_PASSED = 1;
}
else
{
}
if @ERASE_PASSED_1_5B6E9EA_PASSED == 1 then
{
  run(margin_read1_all1_7);
}
else
{
}
if @ERASE_PASSED_2_5B6E9EA_PASSED == 1 then
{
  run(margin_read1_all1_8);
}
else
{
}
print_dl("Test unless_passed");
run_and_branch(erase_all_25)
then
{
}
else
{
  @ERASE_PASSED_3_5B6E9EA_FAILED = 1;
}
run_and_branch(erase_all_26)
then
{
}
else
{
  @ERASE_PASSED_4_5B6E9EA_FAILED = 1;
}
if @ERASE_PASSED_3_5B6E9EA_FAILED == 1 then
{
  run(margin_read1_all1_9);
}
else
{
}
if @ERASE_PASSED_4_5B6E9EA_FAILED == 1 then
{
  run(margin_read1_all1_10);
}
else
{
}
print_dl("Test if_failed");
run_and_branch(erase_all_27)
then
{
}
else
{
  @ERASE_FAILED_1_5B6E9EA_FAILED = 1;
}
run_and_branch(erase_all_28)
then
{
}
else
{
  @ERASE_FAILED_2_5B6E9EA_FAILED = 1;
}
if @ERASE_FAILED_1_5B6E9EA_FAILED == 1 then
{
  run(margin_read1_all1_11);
}
else
{
}
if @ERASE_FAILED_2_5B6E9EA_FAILED == 1 then
{
  run(margin_read1_all1_12);
}
else
{
}
print_dl("Test unless_failed");
run_and_branch(erase_all_29)
then
{
  @ERASE_FAILED_3_5B6E9EA_PASSED = 1;
}
else
{
}
run_and_branch(erase_all_30)
then
{
  @ERASE_FAILED_4_5B6E9EA_PASSED = 1;
}
else
{
}
if @ERASE_FAILED_3_5B6E9EA_PASSED == 1 then
{
  run(margin_read1_all1_13);
}
else
{
}
if @ERASE_FAILED_4_5B6E9EA_PASSED == 1 then
{
  run(margin_read1_all1_14);
}
else
{
}
print_dl("Test if_ran");
run_and_branch(erase_all_31)
then
{
  @ERASE_RAN_1_5B6E9EA_RAN = 1;
}
else
{
  @ERASE_RAN_1_5B6E9EA_RAN = 1;
}
run_and_branch(erase_all_32)
then
{
  @ERASE_RAN_2_5B6E9EA_RAN = 1;
}
else
{
  @ERASE_RAN_2_5B6E9EA_RAN = 1;
}
if @ERASE_RAN_1_5B6E9EA_RAN == 1 then
{
  run(margin_read1_all1_15);
}
else
{
}
if @ERASE_RAN_2_5B6E9EA_RAN == 1 then
{
  run(margin_read1_all1_16);
}
else
{
}
print_dl("Test unless_ran");
run_and_branch(erase_all_33)
then
{
  @ERASE_RAN_3_5B6E9EA_RAN = 1;
}
else
{
  @ERASE_RAN_3_5B6E9EA_RAN = 1;
}
run_and_branch(erase_all_34)
then
{
  @ERASE_RAN_4_5B6E9EA_RAN = 1;
}
else
{
  @ERASE_RAN_4_5B6E9EA_RAN = 1;
}
if @ERASE_RAN_3_5B6E9EA_RAN == 1 then
{
}
else
{
  run(margin_read1_all1_17);
}
if @ERASE_RAN_4_5B6E9EA_RAN == 1 then
{
}
else
{
  run(margin_read1_all1_18);
}
print_dl("Verify that job context wraps import");
{
  if @JOB == "FR" then
  {
    run(erase_all_35);
    run(erase_all_36);
    run(erase_all_37);
    run(erase_all_38);
    {
      run(margin_read1_all1_19);
    }, open,"erase_vfy_2", ""
  }
  else
  {
  }
}, open,"erase_2", ""
print_dl("Verify that job context wraps enable block within an import");
{
  if @JOB == "FR" then
  {
    if @ADDITIONAL_ERASE == 1 then
    {
      run(erase_all_39);
    }
    else
    {
    }
    run(erase_all_40);
  }
  else
  {
  }
}, open,"additional_erase", ""
print_dl("Verify that flow.cz works...");
run(margin_read1_all1_20);
print_dl("Verify that MTO template works...");
stop_bin "1", "", , good, noreprobe, green, 1, over_on;
end
-------------------------------------------------
binning
otherwise bin = "db", "", , bad, noreprobe, red, , not_over_on;
end
-------------------------------------------------
context
 
end
--------------------------------------------------
hardware_bin_descriptions
  1 = "Good die!";
end
